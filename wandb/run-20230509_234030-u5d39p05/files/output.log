loading features >>> [Total: 1.2s] (gnode086:data/features/BERT/bert-large-cased/clip_name/agg/agg.npy)
>>> Currently using 2.7% of system memory 2.6 GB/131.4 GB
loading features >>> [Total: 35.5s] (gnode086:data/features/BERT/bert-large-cased/description/agg/agg_word.npy)
>>> Currently using 5.8% of system memory 6.8 GB/127.2 GB
loading features >>> [Total: 0.6s] (gnode086:data/features/SE-ResNet-50/256D_vgg_face2/agg/agg_feats_mean.npy)
>>> Currently using 5.9% of system memory 6.9 GB/127.1 GB
loading features >>> [Total: 1.2s] (gnode086:data/features/SE-ResNet-154/pred_imagenet_25fps_256px_stride1_offset0/agg/agg_feats_mean.npy)
>>> Currently using 6.0% of system memory 7.0 GB/127.0 GB
loading features >>> [Total: 1.3s] (gnode086:data/features/DenseNet-161/pred_scene_25fps_256px_stride1_offset0/agg/agg_feats_mean.npy)
>>> Currently using 6.1% of system memory 7.2 GB/126.8 GB
loading features >>> [Total: 16.6s] (gnode086:data/features/BERT/bert-large-cased/speech/agg/agg.npy)
>>> Currently using 7.5% of system memory 9.0 GB/125.0 GB
loading features >>> [Total: 1.0s] (gnode086:data/features/I3D/pred_i3d_25fps_256px_stride25_offset0_inner_stride1/agg/agg_feats_mean.npy)
>>> Currently using 7.5% of system memory 9.1 GB/124.9 GB
loading features >>> [Total: 0.7s] (gnode086:data/features/S3DG/pred_s3dg_10fps_256px_stride16_offset0_inner_stride1/agg/agg_feats_mean.npy)
>>> Currently using 7.6% of system memory 9.2 GB/124.8 GB
train size: 24098 clips
>>> Currently using 7.6% of system memory 9.2 GB/124.8 GB
>>> Currently using 7.6% of system memory 9.2 GB/124.8 GB
>>> Currently using 7.6% of system memory 9.2 GB/124.8 GB
>>> Currently using 7.6% of system memory 9.2 GB/124.8 GB
>>> Currently using 7.6% of system memory 9.2 GB/124.8 GB
>>> Currently using 7.6% of system memory 9.2 GB/124.8 GB
>>> Currently using 7.6% of system memory 9.2 GB/124.8 GB
>>> Currently using 7.6% of system memory 9.2 GB/124.8 GB
val size: 3360 clips
MoEE(
  (aggregation): ModuleDict(
    (label): NetVLAD(
      (batch_norm): BatchNorm1d(10, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (face): MeanToken()
    (scene): MeanToken()
    (speech): MeanToken()
  )
  (video_GU): ModuleDict(
    (clip_name): Gated_Embedding_Unit(
      (fc): Linear(in_features=1024, out_features=512, bias=True)
      (cg): Context_Gating(
        (fc): Linear(in_features=512, out_features=512, bias=True)
        (batch_norm): BatchNorm1d(3, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (face): Gated_Embedding_Unit(
      (fc): Linear(in_features=256, out_features=512, bias=True)
      (cg): Context_Gating(
        (fc): Linear(in_features=512, out_features=512, bias=True)
        (batch_norm): BatchNorm1d(3, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (rgb): Gated_Embedding_Unit(
      (fc): Linear(in_features=2048, out_features=512, bias=True)
      (cg): Context_Gating(
        (fc): Linear(in_features=512, out_features=512, bias=True)
        (batch_norm): BatchNorm1d(3, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (scene): Gated_Embedding_Unit(
      (fc): Linear(in_features=2208, out_features=512, bias=True)
      (cg): Context_Gating(
        (fc): Linear(in_features=512, out_features=512, bias=True)
        (batch_norm): BatchNorm1d(3, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (speech): Gated_Embedding_Unit(
      (fc): Linear(in_features=1024, out_features=512, bias=True)
      (cg): Context_Gating(
        (fc): Linear(in_features=512, out_features=512, bias=True)
        (batch_norm): BatchNorm1d(3, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (video): Gated_Embedding_Unit(
      (fc): Linear(in_features=1024, out_features=512, bias=True)
      (cg): Context_Gating(
        (fc): Linear(in_features=512, out_features=512, bias=True)
        (batch_norm): BatchNorm1d(3, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (s3d): Gated_Embedding_Unit(
      (fc): Linear(in_features=1024, out_features=512, bias=True)
      (cg): Context_Gating(
        (fc): Linear(in_features=512, out_features=512, bias=True)
        (batch_norm): BatchNorm1d(3, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (clip_GU): ModuleList(
    (0): Identity()
    (1): Identity()
    (2): Identity()
  )
  (text_GU): ModuleDict(
    (clip_name): Gated_Embedding_Unit(
      (fc): Linear(in_features=10240, out_features=512, bias=True)
      (cg): Context_Gating(
        (fc): Linear(in_features=512, out_features=512, bias=True)
        (batch_norm): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (description): Gated_Embedding_Unit(
      (fc): Linear(in_features=10240, out_features=512, bias=True)
      (cg): Context_Gating(
        (fc): Linear(in_features=512, out_features=512, bias=True)
        (batch_norm): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (face): Gated_Embedding_Unit(
      (fc): Linear(in_features=10240, out_features=512, bias=True)
      (cg): Context_Gating(
        (fc): Linear(in_features=512, out_features=512, bias=True)
        (batch_norm): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (rgb): Gated_Embedding_Unit(
      (fc): Linear(in_features=10240, out_features=512, bias=True)
      (cg): Context_Gating(
        (fc): Linear(in_features=512, out_features=512, bias=True)
        (batch_norm): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (scene): Gated_Embedding_Unit(
      (fc): Linear(in_features=10240, out_features=512, bias=True)
      (cg): Context_Gating(
        (fc): Linear(in_features=512, out_features=512, bias=True)
        (batch_norm): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (speech): Gated_Embedding_Unit(
      (fc): Linear(in_features=10240, out_features=512, bias=True)
      (cg): Context_Gating(
        (fc): Linear(in_features=512, out_features=512, bias=True)
        (batch_norm): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (video): Gated_Embedding_Unit(
      (fc): Linear(in_features=10240, out_features=512, bias=True)
      (cg): Context_Gating(
        (fc): Linear(in_features=512, out_features=512, bias=True)
        (batch_norm): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (s3d): Gated_Embedding_Unit(
      (fc): Linear(in_features=10240, out_features=512, bias=True)
      (cg): Context_Gating(
        (fc): Linear(in_features=512, out_features=512, bias=True)
        (batch_norm): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
  (text_clip): ModuleList(
    (0): Identity()
    (1): Identity()
    (2): Identity()
  )
  (moe_fc): Linear(in_features=10240, out_features=21, bias=True)
)
Trainable parameters: 50541651
torch.Size([32, 32]) 32
Train Epoch: 1 [0/24098 (0%)] Loss: 0.121227
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
Train Epoch: 1 [160/24098 (1%)] Loss: 0.121297
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
Train Epoch: 1 [320/24098 (1%)] Loss: 0.121458
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
Train Epoch: 1 [480/24098 (2%)] Loss: 0.121212
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
Train Epoch: 1 [640/24098 (3%)] Loss: 0.121311
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
Train Epoch: 1 [800/24098 (3%)] Loss: 0.121151
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
Train Epoch: 1 [960/24098 (4%)] Loss: 0.120772
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
Train Epoch: 1 [1120/24098 (5%)] Loss: 0.121107
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
Train Epoch: 1 [1280/24098 (5%)] Loss: 0.121140
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
Train Epoch: 1 [1440/24098 (6%)] Loss: 0.121051
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
Train Epoch: 1 [1600/24098 (7%)] Loss: 0.121053
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
Train Epoch: 1 [1760/24098 (7%)] Loss: 0.121210
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
Train Epoch: 1 [1920/24098 (8%)] Loss: 0.121207
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
Train Epoch: 1 [2080/24098 (9%)] Loss: 0.121335
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
Train Epoch: 1 [2240/24098 (9%)] Loss: 0.121416
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
Train Epoch: 1 [2400/24098 (10%)] Loss: 0.121508
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
Train Epoch: 1 [2560/24098 (11%)] Loss: 0.121282
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
Train Epoch: 1 [2720/24098 (11%)] Loss: 0.121295
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
Train Epoch: 1 [2880/24098 (12%)] Loss: 0.121056
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
Train Epoch: 1 [3040/24098 (13%)] Loss: 0.121110
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
Train Epoch: 1 [3200/24098 (13%)] Loss: 0.121105
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
Train Epoch: 1 [3360/24098 (14%)] Loss: 0.121049
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
Train Epoch: 1 [3520/24098 (15%)] Loss: 0.120837
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
Train Epoch: 1 [3680/24098 (15%)] Loss: 0.121336
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
Train Epoch: 1 [3840/24098 (16%)] Loss: 0.121463
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
Train Epoch: 1 [4000/24098 (17%)] Loss: 0.121611
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
Train Epoch: 1 [4160/24098 (17%)] Loss: 0.121172
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
Train Epoch: 1 [4320/24098 (18%)] Loss: 0.121025
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
Train Epoch: 1 [4480/24098 (19%)] Loss: 0.121323
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
Train Epoch: 1 [4640/24098 (19%)] Loss: 0.121635
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
Train Epoch: 1 [4800/24098 (20%)] Loss: 0.121202
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
Train Epoch: 1 [4960/24098 (21%)] Loss: 0.121006
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
Train Epoch: 1 [5120/24098 (21%)] Loss: 0.121480
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
Train Epoch: 1 [5280/24098 (22%)] Loss: 0.121868
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
Train Epoch: 1 [5440/24098 (23%)] Loss: 0.121299
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
Train Epoch: 1 [5600/24098 (23%)] Loss: 0.121032
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
Train Epoch: 1 [5760/24098 (24%)] Loss: 0.121418
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
Train Epoch: 1 [5920/24098 (25%)] Loss: 0.121769
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
Train Epoch: 1 [6080/24098 (25%)] Loss: 0.121563
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
Train Epoch: 1 [6240/24098 (26%)] Loss: 0.121215
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
Train Epoch: 1 [6400/24098 (27%)] Loss: 0.121115
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
Train Epoch: 1 [6560/24098 (27%)] Loss: 0.121082
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
Train Epoch: 1 [6720/24098 (28%)] Loss: 0.121267
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
Train Epoch: 1 [6880/24098 (29%)] Loss: 0.121025
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
Train Epoch: 1 [7040/24098 (29%)] Loss: 0.121521
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
Train Epoch: 1 [7200/24098 (30%)] Loss: 0.121165
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
Train Epoch: 1 [7360/24098 (31%)] Loss: 0.121512
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
Train Epoch: 1 [7520/24098 (31%)] Loss: 0.121218
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
Train Epoch: 1 [7680/24098 (32%)] Loss: 0.121360
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
torch.Size([32, 32]) 32
Traceback (most recent call last):
  File "train.py", line 86, in <module>
    main(config)
  File "train.py", line 57, in main
    trainer.train()
  File "/home2/debashish.roy/CondensedMovies/base/base_trainer.py", line 68, in train
    result = self._train_epoch(epoch)
  File "/home2/debashish.roy/CondensedMovies/trainer/trainer.py", line 66, in _train_epoch
    for batch_idx, (minibatch, id) in enumerate(self.data_loader):
  File "/home2/debashish.roy/miniconda3/envs/IS/lib/python3.7/site-packages/torch/utils/data/dataloader.py", line 628, in __next__
    data = self._next_data()
  File "/home2/debashish.roy/miniconda3/envs/IS/lib/python3.7/site-packages/torch/utils/data/dataloader.py", line 1316, in _next_data
    idx, data = self._get_data()
  File "/home2/debashish.roy/miniconda3/envs/IS/lib/python3.7/site-packages/torch/utils/data/dataloader.py", line 1282, in _get_data
    success, data = self._try_get_data()
  File "/home2/debashish.roy/miniconda3/envs/IS/lib/python3.7/site-packages/torch/utils/data/dataloader.py", line 1120, in _try_get_data
    data = self._data_queue.get(timeout=timeout)
  File "/home2/debashish.roy/miniconda3/envs/IS/lib/python3.7/multiprocessing/queues.py", line 104, in get
    if not self._poll(timeout):
  File "/home2/debashish.roy/miniconda3/envs/IS/lib/python3.7/multiprocessing/connection.py", line 257, in poll
    return self._poll(timeout)
  File "/home2/debashish.roy/miniconda3/envs/IS/lib/python3.7/multiprocessing/connection.py", line 414, in _poll
    r = wait([self], timeout)
  File "/home2/debashish.roy/miniconda3/envs/IS/lib/python3.7/multiprocessing/connection.py", line 921, in wait
    ready = selector.select(timeout)
  File "/home2/debashish.roy/miniconda3/envs/IS/lib/python3.7/selectors.py", line 415, in select
    fd_event_list = self._selector.poll(timeout)
KeyboardInterrupt